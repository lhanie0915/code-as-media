[[introduction]]
== Introduction

This is a catalog of sites where code is a media object in and of its own right.  We're not interested so much in the code itself (i.e., does it work, how does it perform, etc), but how do we communicate *about* code: what are the best ways to see, learn, and understand a topic.  People are learning in new ways, and we want to understand the patterns that are emerging.  

Each chapter covers a specific pattern, along with multiple sample sites that show the ideas in action.  The goal is to begin to build a common vocabulary to think about new ways people are learning to code and to understand the range of projects across the web.  The current patterns are:

* <<unstructured_sandbox, Unstructured Sandbox>>.  An unstructured sandbox allows you to try your code right in the browser, but does not force or require you to take any specific actions before you can proceed to the next step.
* <<structured_sandbox, Structured Sandbox>>.  Sites that provide a structured sandbox also allow you to try code in the browser, but proscribe how you step through material.  You typically have a very specific exercise to complete before you can proceed to the next step in the learning process.
* <<sharing, Sharing>>. Examples of how code can be shared with others for commentary and discussion.
* <<formatting_and_annotation, Formatting and Annotation>>.  Examples of decorating the code listing for improved readability.
* <<execution_and_flow, Execution and Flow>>.  Examples that illustrate how the execution or structure of code.
* <<live_stack, Live Stack>>. Examples of full language and tool stacks, that might either be in-browser, PaaS, or downloadable environments.
* <<finding_and_searching, Finding and Searching>>.  Examples of sites related to finding specific examples or reference material.
* <<evolution, Evolution>>.  Examples of how code is shown to change or evolve over time.

Each pattern has 4-5 canonical examples.  The final chapter lists sites that apply these ideas, or are just really interesting.  You can find this at:

* <<projects, Projects>>
















